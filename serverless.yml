
service: serverless-todo

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  region: ap-south-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:ap-south-1:310566725370:table/TodoTable
        - arn:aws:dynamodb:ap-south-1:310566725370:table/userTable

functions:

  authoriserFunction:
    handler: src/authorisers/tokenValidator.handler

  addTodo:
    handler: src/addTodo.handler
    events:
      - http:
          path: /
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
          authorizer:
            name: authoriserFunction
            type: request
            identitySource: method.request.header.X-Amz-Security-Token
  
  fetchTodos:
    handler: src/fetchTodos.handler
    events:
      - http:
          path: /all
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
          authorizer:
            name: authoriserFunction
            type: request
            identitySource: method.request.header.X-Amz-Security-Token

  updateTodo:
    handler: src/updateTodo.handler
    events:
      - http:
          path: /{id}
          method: put
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
          authorizer:
            name: authoriserFunction
            type: request
            identitySource: method.request.header.X-Amz-Security-Token
          
  deleteTodo:
    handler: src/deleteTodo.handler
    events:
      - http:
          path: /{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
          authorizer:
            name: authoriserFunction
            type: request
            identitySource: method.request.header.X-Amz-Security-Token

  test:
    handler: src/test.handler
    events:
      - http:
          path: /test
          method: post
  
  fetchTodo:
    handler: src/fetchTodo.handler
    events:
      - http:
          path: /{id}
          method: get
          authorizer:
            name: authoriserFunction
            type: request
            identitySource: method.request.header.X-Amz-Security-Token

  signup:
    handler: src/signup.handler
    events:
      - http:
          path: /signup
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
          
  login:
    handler: src/login.handler
    events:
      - http:
          path: /login
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
  
resources:
  Resources:
    TodoTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: TodoTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    
    userTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: userTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
